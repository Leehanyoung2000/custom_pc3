"""
Django settings for custom_pc3 project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_%=t6%yuno1rga1hx8xf-y93m4f$#w##qzxx=!^4#1k-j9w%22'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "daphne",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'pc_builder',
    'chat',
    'channels',  
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.kakao',
    "widget_tweaks",
    'django.contrib.humanize',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
   
]

ROOT_URLCONF = 'custom_pc3.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'custom_pc3.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators


# 비밀번호시 검증 없애기 (ex 비밀번호에 특수기호 포함등)
AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
    {
        'NAME' : 'pc_builder.validators.CustomPasswordValidator',
    }
]
# AUTH_PASSWORD_VALIDATORS = []

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ko'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/uploads/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# allauth 세팅

# django.contrib.auth 
AUTH_USER_MODEL = 'pc_builder.User'

# django.contrib.allauth
AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
]



# 이메일이나 로그인 후 리다렉트 할 주소
ACCOUNT_SIGNUP_REDIRECT_URL = 'profile_set' # 이제 회원가입 후 index로 가는것이 아닌 프로필 설정ㅍ ㅔ이지로 이동
ACCOUNT_LOGOUT_REDIRECT_URL = 'index'
LOGIN_REDIRECT_URL = 'index'

# 로그아웃시 확인없이 바로 로그아웃
ACCOUNT_LOGOUT_ON_GET = True

# 회원가입 폼 클래스 지정
# ACCOUNT_SIGNUP_FORM_CLASS = 'pc_builder.forms.SignupForm' 프로필 셋이 생기면서 nickname 을 따로 설정할 수 있기에 주석처리

# 회원가입 실패시 폼에 데이터 남기기
ACCOUNT_PASSWORD_INPUT_RENDER_VALUE = True

# 이메일 필드 필수
ACCOUNT_EMAIL_REQUIRED = True
# 이메일 인증해야함
ACCOUNT_EMAIL_VARIFICATION = 'optional'
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = "account_email_confirmation_done"
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = "account_email_confirmation_done"

# 이메일 웹사이트 도메인 제거
ACCOUNT_EMAIL_SUBJECT_PREFIX = ""
# 비밀번호 변경 후 로그아웃 방지
ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = False 

# 로그인시 리다이렉트할 페이지 지정
# LOGIN_REDIRECT_URL = "index"

# allauth 로그인 페이지
LOGIN_URL = "account_login"


# Email settings
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"


# mysite/settings.py
# Channels
ASGI_APPLICATION = "custom_pc3.asgi.application"
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}

AUTH_USER_MODEL = 'pc_builder.User'  